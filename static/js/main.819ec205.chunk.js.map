{"version":3,"sources":["SearchForm.js","index.js"],"names":["SearchForm","props","onSubmit","event","preventDefault","onFormSubmit","className","type","placeholder","onChange","onSearchValueChange","target","value","disabled","isSearching","onClick","onSingleSearchClick","App","state","searchTerm","jokes","isFetchingJoke","onSearchChange","bind","searchJokes","limit","this","setState","fetch","method","headers","Accept","then","response","json","results","map","item","joke","id","alt","src","renderJokes","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"gQA0BeA,EAvBI,SAAAC,GAKf,OACI,uBAAMC,SALO,SAACC,GACdA,EAAMC,iBACNH,EAAMI,gBAGoBC,UAAU,cAApC,UACI,uBAAOC,KAAK,OACRC,YAAY,sBACZC,SAAU,SAAAN,GAAK,OAAIF,EAAMS,oBAAoBP,EAAMQ,OAAOC,UAC9D,gCACI,wBAAQC,SAAUZ,EAAMa,YAAxB,oBAEA,wBAAQC,QAASd,EAAMe,oBACnBH,SAAUZ,EAAMa,YADpB,sCCTVG,G,wDACJ,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,WAAY,GACZC,MAAO,GACPC,gBAAgB,GAElB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBATP,E,+CAYd,WAAyB,IAAD,OAAZE,EAAY,uDAAJ,GAClBC,KAAKC,SAAS,CAAEN,gBAAgB,IAChCO,MAAM,0CAAD,OAA2CF,KAAKR,MAAMC,WAAtD,kBAA0EM,GAC/E,CACEI,OAAQ,MACRC,QAAS,CACPC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACL,IAAMd,EAAQc,EAAKC,QACnB,EAAKR,SAAS,CACZP,QACAC,gBAAgB,S,4BAKxB,SAAeT,GACbc,KAAKC,SAAS,CAAER,WAAYP,M,yBAG9B,WACE,OACE,oBAAIN,UAAU,aAAd,SACGoB,KAAKR,MAAME,MAAMgB,KAAI,SAAAC,GAAI,OAAI,6BAAmBA,EAAKC,MAAfD,EAAKE,W,oBAKlD,WAAU,IAAD,OACP,OACE,sBAAKjC,UAAU,MAAf,UACE,qBAAKA,UAAU,OAAOkC,IAAI,YAAYC,IAAI,+BAC1C,cAAC,EAAD,CACEpC,aAAcqB,KAAKF,YACnBd,oBAAqBgB,KAAKJ,eAC1BR,YAAaY,KAAKR,MAAMG,eACxBL,oBAAqB,kBAAM,EAAKQ,YAAY,MAE7CE,KAAKR,MAAMG,eACV,kBACAK,KAAKgB,qB,GAxDGC,IAAMC,YA8DlBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.819ec205.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchForm.css';\r\n\r\nconst SearchForm = props => {\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.onFormSubmit();\r\n    };\r\n    return (\r\n        <form onSubmit={onSubmit} className='search-form'>\r\n            <input type=\"text\"\r\n                placeholder=\"Enter serch term...\"\r\n                onChange={event => props.onSearchValueChange(event.target.value)} />\r\n            <div>\r\n                <button disabled={props.isSearching}>Search</button>\r\n\r\n                <button onClick={props.onSingleSearchClick}\r\n                    disabled={props.isSearching}>\r\n                    I'm Feeling Funny\r\n            </button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n};\r\n\r\nexport default SearchForm;","import React from \"react\";\nimport { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SearchForm from './SearchForm';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      searchTerm: '',\n      jokes: [],\n      isFetchingJoke: false\n    };\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.searchJokes = this.searchJokes.bind(this);\n  }\n\n  searchJokes(limit = 20) {\n    this.setState({ isFetchingJoke: true });\n    fetch(`https://icanhazdadjoke.com/search?term=${this.state.searchTerm}&limit=${limit}`, \n    {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        const jokes = json.results;\n        this.setState({\n          jokes,\n          isFetchingJoke: false\n        });\n      });\n  }\n\n  onSearchChange(value) {\n    this.setState({ searchTerm: value });\n  }\n\n  renderJokes() {\n    return (\n      <ul className=\"jokes-list\">\n        {this.state.jokes.map(item => <li key={item.id}>{item.joke}</li>)}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img className=\"logo\" alt=\"dad-jokes\" src=\"/google-dad-jokes-logo.png\" />\n        <SearchForm \n          onFormSubmit={this.searchJokes}\n          onSearchValueChange={this.onSearchChange}\n          isSearching={this.state.isFetchingJoke}\n          onSingleSearchClick={() => this.searchJokes(1)}\n        />\n        {this.state.isFetchingJoke\n        ? 'Loading joke...'\n        : this.renderJokes()}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}